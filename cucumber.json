[
  {
    "uri": "features/failure.feature",
    "id": "failure",
    "keyword": "Feature",
    "name": "failure",
    "description": "  Operation call returns `Rung::Runner::Result` object that can be either a success or a failure.\n  Result has `success?` and `failure?` methods.",
    "line": 1,
    "elements": [
      {
        "id": "failure;when-all-steps-return-truthy-value-the-result-is-a-success",
        "keyword": "Scenario",
        "name": "When all steps return truthy value the result is a success",
        "description": "",
        "line": 5,
        "type": "scenario",
        "before": [
          {
            "match": {
              "location": "features/step_definitions/output.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 3722891
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "definition",
            "line": 6,
            "doc_string": {
              "value": "class Operation < Rung::Base\n  step do\n    # do something...\n    true\n  end\n\n  step :second_step\n\n  def second_step\n    2 + 2\n  end\nend",
              "content_type": "ruby",
              "line": 7
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:4"
            },
            "result": {
              "status": "passed",
              "duration": 550154
            }
          },
          {
            "keyword": "When ",
            "name": "I run",
            "line": 21,
            "doc_string": {
              "value": "@result = Operation.new.call",
              "content_type": "",
              "line": 22
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:10"
            },
            "result": {
              "status": "passed",
              "duration": 72096
            }
          },
          {
            "keyword": "Then ",
            "name": "I can assure that",
            "line": 25,
            "doc_string": {
              "value": "@result.success? == true",
              "content_type": "",
              "line": 26
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 287246
            }
          },
          {
            "keyword": "And ",
            "name": "I can assure that",
            "line": 29,
            "doc_string": {
              "value": "@result.failure? == false",
              "content_type": "",
              "line": 30
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 30015
            }
          }
        ]
      },
      {
        "id": "failure;when-at-least-one-step-returns-a-falsy-value-then-the-result-is-a-failure",
        "keyword": "Scenario",
        "name": "When at least one step returns a falsy value then the result is a failure",
        "description": "",
        "line": 34,
        "type": "scenario",
        "before": [
          {
            "match": {
              "location": "features/step_definitions/output.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 64502
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "definition",
            "line": 35,
            "doc_string": {
              "value": "class Operation < Rung::Base\n  step do\n    # do something...\n    true\n  end\n\n  step :second_step\n\n  def second_step\n    nil\n  end\nend",
              "content_type": "ruby",
              "line": 36
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:4"
            },
            "result": {
              "status": "passed",
              "duration": 363610
            }
          },
          {
            "keyword": "When ",
            "name": "I run",
            "line": 50,
            "doc_string": {
              "value": "@result = Operation.new.call",
              "content_type": "",
              "line": 51
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:10"
            },
            "result": {
              "status": "passed",
              "duration": 59897
            }
          },
          {
            "keyword": "Then ",
            "name": "I can assure that",
            "line": 54,
            "doc_string": {
              "value": "@result.success? == false",
              "content_type": "",
              "line": 55
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 34103
            }
          },
          {
            "keyword": "And ",
            "name": "I can assure that",
            "line": 58,
            "doc_string": {
              "value": "@result.failure? == true",
              "content_type": "",
              "line": 59
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 18125
            }
          }
        ]
      },
      {
        "id": "failure;when-a-step-fails-then-the-next-steps-are-not-executed",
        "keyword": "Scenario",
        "name": "When a step fails then the next steps are not executed",
        "description": "",
        "line": 63,
        "type": "scenario",
        "before": [
          {
            "match": {
              "location": "features/step_definitions/output.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 71838
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "definition",
            "line": 64,
            "doc_string": {
              "value": "class Operation < Rung::Base\n  step do\n    print_to_output \"Hello\"\n    true\n  end\n\n  step do\n    # something went wrong, retuning false\n    false\n  end\n\n  step do\n    print_to_output \"World\"\n  end\nend",
              "content_type": "ruby",
              "line": 65
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:4"
            },
            "result": {
              "status": "passed",
              "duration": 286167
            }
          },
          {
            "keyword": "When ",
            "name": "I run",
            "line": 82,
            "doc_string": {
              "value": "Operation.new.call",
              "content_type": "",
              "line": 83
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:10"
            },
            "result": {
              "status": "passed",
              "duration": 383536
            }
          },
          {
            "keyword": "Then ",
            "name": "I see output",
            "line": 86,
            "doc_string": {
              "value": "Hello",
              "content_type": "",
              "line": 87
            },
            "match": {
              "location": "features/step_definitions/output.rb:8"
            },
            "result": {
              "status": "passed",
              "duration": 25530
            }
          }
        ]
      }
    ]
  },
  {
    "uri": "features/state.feature",
    "id": "state",
    "keyword": "Feature",
    "name": "state",
    "description": "",
    "line": 1,
    "elements": [
      {
        "id": "state;state-is-shared-across-step-executions",
        "keyword": "Scenario",
        "name": "State is shared across step executions",
        "description": "",
        "line": 3,
        "type": "scenario",
        "before": [
          {
            "match": {
              "location": "features/step_definitions/output.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 52302
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "definition",
            "line": 4,
            "doc_string": {
              "value": "class Operation < Rung::Base\n  step do |state|\n    state[:what] = \"World!\"\n  end\n\n  step do\n    print_to_output \"Hello \"\n  end\n\n  step do |state|\n    print_to_output state[:what]\n  end\nend",
              "content_type": "ruby",
              "line": 5
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:4"
            },
            "result": {
              "status": "passed",
              "duration": 303684
            }
          },
          {
            "keyword": "When ",
            "name": "I run",
            "line": 20,
            "doc_string": {
              "value": "Operation.new.call",
              "content_type": "",
              "line": 21
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:10"
            },
            "result": {
              "status": "passed",
              "duration": 394784
            }
          },
          {
            "keyword": "Then ",
            "name": "I see output",
            "line": 24,
            "doc_string": {
              "value": "Hello World!",
              "content_type": "",
              "line": 25
            },
            "match": {
              "location": "features/step_definitions/output.rb:8"
            },
            "result": {
              "status": "passed",
              "duration": 26917
            }
          }
        ]
      },
      {
        "id": "state;state-is-available-in-the-result-object",
        "keyword": "Scenario",
        "name": "State is available in the result object",
        "description": "",
        "line": 29,
        "type": "scenario",
        "before": [
          {
            "match": {
              "location": "features/step_definitions/output.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 51740
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "definition",
            "line": 30,
            "doc_string": {
              "value": "class Operation < Rung::Base\n  step do |state|\n    state[:output_text] = \"Hello \"\n  end\n\n  step do |state|\n    state[:output_text] << \"World!\"\n  end\nend",
              "content_type": "ruby",
              "line": 31
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:4"
            },
            "result": {
              "status": "passed",
              "duration": 284645
            }
          },
          {
            "keyword": "When ",
            "name": "I run",
            "line": 42,
            "doc_string": {
              "value": "@result = Operation.new.call",
              "content_type": "",
              "line": 43
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:10"
            },
            "result": {
              "status": "passed",
              "duration": 55956
            }
          },
          {
            "keyword": "Then ",
            "name": "I can assure that",
            "line": 46,
            "doc_string": {
              "value": "@result[:output_text] == \"Hello World!\"",
              "content_type": "",
              "line": 47
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 32962
            }
          }
        ]
      },
      {
        "id": "state;initial-state-can-be-passed-to-call-method",
        "keyword": "Scenario",
        "name": "Initial state can be passed to call method",
        "description": "",
        "line": 51,
        "type": "scenario",
        "before": [
          {
            "match": {
              "location": "features/step_definitions/output.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 52097
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "definition",
            "line": 52,
            "doc_string": {
              "value": "class Operation < Rung::Base\n  step do |state|\n    state[:output_text] << \"World!\"\n  end\nend",
              "content_type": "ruby",
              "line": 53
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:4"
            },
            "result": {
              "status": "passed",
              "duration": 253739
            }
          },
          {
            "keyword": "When ",
            "name": "I run",
            "line": 60,
            "doc_string": {
              "value": "@result = Operation.new.call(output_text: \"Hello \")",
              "content_type": "",
              "line": 61
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:10"
            },
            "result": {
              "status": "passed",
              "duration": 52238
            }
          },
          {
            "keyword": "Then ",
            "name": "I can assure that",
            "line": 64,
            "doc_string": {
              "value": "@result[:output_text] == \"Hello World!\"",
              "content_type": "",
              "line": 65
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 32008
            }
          }
        ]
      }
    ]
  },
  {
    "uri": "features/steps_definition.feature",
    "id": "steps_definition",
    "keyword": "Feature",
    "name": "steps_definition",
    "description": "  There are multiple ways of defining steps.\n  Steps definition order is important as they are always executed in order.",
    "line": 1,
    "elements": [
      {
        "id": "steps_definition;steps-can-be-defined-as-a-ruby-block",
        "keyword": "Scenario",
        "name": "Steps can be defined as a Ruby block",
        "description": "",
        "line": 5,
        "type": "scenario",
        "before": [
          {
            "match": {
              "location": "features/step_definitions/output.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 52765
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "definition",
            "line": 6,
            "doc_string": {
              "value": "class Operation < Rung::Base\n  step do |state|\n    state[:what] = \"World\"\n  end\n\n  step do\n    print_to_output \"Hello \"\n  end\n\n  step do |state|\n    print_to_output state[:what]\n  end\n\n  step do\n    print_to_output \"!\"\n  end\nend",
              "content_type": "ruby",
              "line": 7
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:4"
            },
            "result": {
              "status": "passed",
              "duration": 290993
            }
          },
          {
            "keyword": "When ",
            "name": "I run",
            "line": 26,
            "doc_string": {
              "value": "Operation.new.call",
              "content_type": "",
              "line": 27
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:10"
            },
            "result": {
              "status": "passed",
              "duration": 397598
            }
          },
          {
            "keyword": "Then ",
            "name": "I see output",
            "line": 30,
            "doc_string": {
              "value": "Hello World!",
              "content_type": "",
              "line": 31
            },
            "match": {
              "location": "features/step_definitions/output.rb:8"
            },
            "result": {
              "status": "passed",
              "duration": 25676
            }
          }
        ]
      },
      {
        "id": "steps_definition;steps-can-be-defined-as-methods",
        "keyword": "Scenario",
        "name": "Steps can be defined as methods",
        "description": "",
        "line": 35,
        "type": "scenario",
        "before": [
          {
            "match": {
              "location": "features/step_definitions/output.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 58727
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "definition",
            "line": 36,
            "doc_string": {
              "value": "class Operation < Rung::Base\n  step :set_what_state\n  step :print_hello\n  step \"print_what\"\n  step :print_bang\n\n  def set_what_state(state)\n    state[:what] = \"World\"\n  end\n\n  def print_hello\n    print_to_output \"Hello \"\n  end\n\n  def print_what(state)\n    print_to_output state[:what]\n  end\n\n  def print_bang\n    print_to_output \"!\"\n  end\nend",
              "content_type": "ruby",
              "line": 37
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:4"
            },
            "result": {
              "status": "passed",
              "duration": 319384
            }
          },
          {
            "keyword": "When ",
            "name": "I run",
            "line": 61,
            "doc_string": {
              "value": "Operation.new.call",
              "content_type": "",
              "line": 62
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:10"
            },
            "result": {
              "status": "passed",
              "duration": 361028
            }
          },
          {
            "keyword": "Then ",
            "name": "I see output",
            "line": 65,
            "doc_string": {
              "value": "Hello World!",
              "content_type": "",
              "line": 66
            },
            "match": {
              "location": "features/step_definitions/output.rb:8"
            },
            "result": {
              "status": "passed",
              "duration": 25226
            }
          }
        ]
      },
      {
        "id": "steps_definition;steps-can-be-defined-as-any-objects-with-call-method",
        "keyword": "Scenario",
        "name": "Steps can be defined as any objects with call method",
        "description": "",
        "line": 70,
        "type": "scenario",
        "before": [
          {
            "match": {
              "location": "features/step_definitions/output.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 78238
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "definition",
            "line": 71,
            "doc_string": {
              "value": "class SetWhatState\n  def initialize(what)\n    @what = what\n  end\n\n  def call(state)\n    state[:what] = @what\n  end\nend\n\nclass PrintHello\n  def self.call\n    print_to_output \"Hello \"\n  end\nend\n\nclass PrintWhat\n  def self.call(state)\n    print_to_output state[:what]\n  end\nend\n\nPrintBang = -> { print_to_output \"!\" }\n\nclass Operation < Rung::Base\n  step SetWhatState.new(\"World\")\n  step PrintHello\n  step PrintWhat\n  step PrintBang\nend",
              "content_type": "ruby",
              "line": 72
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:4"
            },
            "result": {
              "status": "passed",
              "duration": 1813723
            }
          },
          {
            "keyword": "When ",
            "name": "I run",
            "line": 104,
            "doc_string": {
              "value": "Operation.new.call",
              "content_type": "",
              "line": 105
            },
            "match": {
              "location": "features/step_definitions/temporary_code_scope.rb:10"
            },
            "result": {
              "status": "passed",
              "duration": 629845
            }
          },
          {
            "keyword": "Then ",
            "name": "I see output",
            "line": 108,
            "doc_string": {
              "value": "Hello World!",
              "content_type": "",
              "line": 109
            },
            "match": {
              "location": "features/step_definitions/output.rb:8"
            },
            "result": {
              "status": "passed",
              "duration": 26384
            }
          }
        ]
      }
    ]
  }
]